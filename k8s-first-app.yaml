apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: k8s-first-app-deployment
  name: k8s-first-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-first-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-first-app
        tyro.app.name: tyro-k8s-first-app
        app: k8s-first-app
        version: 0.0.10
      annotations:
        sidecar.istio.io/inject: "true"

    spec:
      containers:
        - image: k8s-first-app:0.0.10
          name: k8s-first-app
          ports:
            - containerPort: 8080
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: k8s-first-app
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k8s-first-app-deployment
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-first-app-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    tyro.app.name:  tyro-k8s-first-app
  type: LoadBalancer
---
kind: Service
apiVersion: v1
metadata:
  name: mysql-db-svc
spec:
  type: ExternalName
  externalName: 10.0.2.2
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: k8s-first-app-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: k8s-first-app
spec:
  hosts:
    - "*"
  gateways:
    - k8s-first-app-gateway
  http:
    - match:
        - uri:
            prefix: /hello
      route:
        - destination:
            port:
              number: 8080
            host: "k8s-first-app-service"